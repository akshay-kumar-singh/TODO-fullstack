{"ast":null,"code":"var _jsxFileName = \"/home/akshay/APP-MANAGEMENT(backened)/client/todo-list-mernapp/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState('');\n  const [updateItemText, setUpdateItemText] = useState('');\n\n  //add new todo item to database\n  const addItem = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5500/api/item', {\n        item: itemText\n      });\n      setListItems(prev => [...prev, res.data]);\n      setItemText('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Create function to fetch all todo items from database -- we will use useEffect hook\n  // useEffect(()=>{\n  //   const getItemsList = async () => {\n  //     try{\n  //       const res = await axios.get('http://localhost:5500/api/items')\n  //       setListItems(res.data);\n  //       console.log('render')\n  //     }catch(err){\n  //       console.log(err);\n  //     }\n  //   }\n  //   getItemsList()\n  // },[]);\n\n  // Delete item when click on delete\n  const deleteItem = async id => {\n    try {\n      const res = await axios.delete(`http://localhost:5500/api/item/${id}`);\n      const newListItems = listItems.filter(item => item._id !== id);\n      setListItems(newListItems);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  //Update item\n  const updateItem = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.put(`http://localhost:5500/api/item/${isUpdating}`, {\n        item: updateItemText\n      });\n      console.log(res.data);\n      const updatedItemIndex = listItems.findIndex(item => item._id === isUpdating);\n      const updatedItem = listItems[updatedItemIndex].item = updateItemText;\n      setUpdateItemText('');\n      setIsUpdating('');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  //before updating item we need to show input field where we will create our updated item\n  const renderUpdateForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"update-form\",\n    onSubmit: e => {\n      updateItem(e);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"update-new-input\",\n      type: \"text\",\n      placeholder: \"New Item\",\n      onChange: e => {\n        setUpdateItemText(e.target.value);\n      },\n      value: updateItemText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"update-new-btn\",\n      type: \"submit\",\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => addItem(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Todo Item\",\n        onChange: e => {\n          setItemText(e.target.value);\n        },\n        value: itemText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-listItems\",\n      children: listItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-item\",\n        children: isUpdating === item._id ? renderUpdateForm() : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"item-content\",\n            children: item.item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-item\",\n            onClick: () => {\n              setIsUpdating(item._id);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-item\",\n            onClick: () => {\n              deleteItem(item._id);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Pz6pLWemKQeQhgmKejjT6JFd80I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","itemText","setItemText","listItems","setListItems","isUpdating","setIsUpdating","updateItemText","setUpdateItemText","addItem","e","preventDefault","res","post","item","prev","data","err","console","log","deleteItem","id","delete","newListItems","filter","_id","updateItem","put","updatedItemIndex","findIndex","updatedItem","renderUpdateForm","className","onSubmit","children","type","placeholder","onChange","target","value","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/home/akshay/APP-MANAGEMENT(backened)/client/todo-list-mernapp/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [itemText, setItemText] = useState('');\n  const [listItems, setListItems] = useState([]);\n  const [isUpdating, setIsUpdating] = useState('');\n  const [updateItemText, setUpdateItemText] = useState('');\n\n  //add new todo item to database\n  const addItem = async (e) => {\n    e.preventDefault();\n    try{\n      const res = await axios.post('http://localhost:5500/api/item', {item: itemText})\n      setListItems(prev => [...prev, res.data]);\n      setItemText('');\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Create function to fetch all todo items from database -- we will use useEffect hook\n  // useEffect(()=>{\n  //   const getItemsList = async () => {\n  //     try{\n  //       const res = await axios.get('http://localhost:5500/api/items')\n  //       setListItems(res.data);\n  //       console.log('render')\n  //     }catch(err){\n  //       console.log(err);\n  //     }\n  //   }\n  //   getItemsList()\n  // },[]);\n\n  // Delete item when click on delete\n  const deleteItem = async (id) => {\n    try{\n      const res = await axios.delete(`http://localhost:5500/api/item/${id}`)\n      const newListItems = listItems.filter(item=> item._id !== id);\n      setListItems(newListItems);\n    }catch(err){\n      console.log(err);\n    }\n  }\n\n  //Update item\n  const updateItem = async (e) => {\n    e.preventDefault()\n    try{\n      const res = await axios.put(`http://localhost:5500/api/item/${isUpdating}`, {item: updateItemText})\n      console.log(res.data)\n      const updatedItemIndex = listItems.findIndex(item => item._id === isUpdating);\n      const updatedItem = listItems[updatedItemIndex].item = updateItemText;\n      setUpdateItemText('');\n      setIsUpdating('');\n    }catch(err){\n      console.log(err);\n    }\n  }\n  //before updating item we need to show input field where we will create our updated item\n  const renderUpdateForm = () => (\n    <form className=\"update-form\" onSubmit={(e)=>{updateItem(e)}} >\n      <input className=\"update-new-input\" type=\"text\" placeholder=\"New Item\" onChange={e=>{setUpdateItemText(e.target.value)}} value={updateItemText} />\n      <button className=\"update-new-btn\" type=\"submit\">Update</button>\n    </form>\n  )\n\n  return (\n    <div className=\"App\">\n      <h1>Todo List</h1>\n      <form className=\"form\" onSubmit={e => addItem(e)}>\n        <input type=\"text\" placeholder='Add Todo Item' onChange={e => {setItemText(e.target.value)} } value={itemText} />\n        <button type=\"submit\">Add</button>\n      </form>\n      <div className=\"todo-listItems\">\n        {\n          listItems.map(item => (\n          <div className=\"todo-item\">\n            {\n              isUpdating === item._id\n              ? renderUpdateForm()\n              : <>\n                  <p className=\"item-content\">{item.item}</p>\n                  <button className=\"update-item\" onClick={()=>{setIsUpdating(item._id)}}>Update</button>\n                  <button className=\"delete-item\" onClick={()=>{deleteItem(item._id)}}>Delete</button>\n                </>\n            }\n          </div>\n          ))\n        }\n        \n\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}